// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package sql

import (
	"context"
)

const createRestaurant = `-- name: CreateRestaurant :one
INSERT INTO restaurants (
    name,
    address,
    city,
    state,
    star,
    postal_code,
    description
) VALUES (
    $1, $2, $3, $4, $5, $6, $7
)
RETURNING id, name, address, city, state, star, postal_code, description, updated_at, created_at
`

type CreateRestaurantParams struct {
	Name        *string
	Address     *string
	City        *string
	State       *string
	Star        int64
	PostalCode  *string
	Description *string
}

func (q *Queries) CreateRestaurant(ctx context.Context, arg CreateRestaurantParams) (Restaurant, error) {
	row := q.db.QueryRow(ctx, createRestaurant,
		arg.Name,
		arg.Address,
		arg.City,
		arg.State,
		arg.Star,
		arg.PostalCode,
		arg.Description,
	)
	var i Restaurant
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Address,
		&i.City,
		&i.State,
		&i.Star,
		&i.PostalCode,
		&i.Description,
		&i.UpdatedAt,
		&i.CreatedAt,
	)
	return i, err
}

const getRestaurantById = `-- name: GetRestaurantById :one
SELECT id, name, address, city, state, star, postal_code, description, updated_at, created_at
FROM restaurants
WHERE id = $1
`

func (q *Queries) GetRestaurantById(ctx context.Context, id int32) (Restaurant, error) {
	row := q.db.QueryRow(ctx, getRestaurantById, id)
	var i Restaurant
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Address,
		&i.City,
		&i.State,
		&i.Star,
		&i.PostalCode,
		&i.Description,
		&i.UpdatedAt,
		&i.CreatedAt,
	)
	return i, err
}
